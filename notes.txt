// binary - two posibilities


arr = 2 7 9 12 25 30 38 100

O(logn), O(1)

Global Linear Search

arr = 2 7 6 9 12 25 30 38 25 100
element = 25

ans = 5



arr = 2 5 5 7 8 8 8 8 10 11
target = 8

2 

if(justleft of elment === elment && justright of element == same) {
    left
    right
    return [left, right];
} else if(justleft of elment !== elment) {
    indexOfElement;

    right
} else if (justRight of elment !== elment) {
    indexOfElement;
    left
}

low = 0, high = 10, mid = 5
























arr = 2 3 5 5 7 9
target = 5
ans = 'YES'
tsaget = 7
ans = 'NO'

if(arr[mid] === element 
    && 
(arr[mid-1] === element || arr[mid+1] === element)) {
    return 'YES';
} else if(arr[mid] === element 
    && 
(arr[mid-1] !== element && arr[mid+1] !== element)) {
    return 'NO'
}
else if(arr[mid] < element) {
    left
} else {
    right
}


arr = 1 3 6 8 9 15
target = 9
















1 2 5 7 13 15 16 18 24 28 29

target = 28

low=0, high=10, mid1=3, mid2=7

count sort
arr = 

















------------------------------------------------------

arr = [29, 34, 19, 39, 21, 41]
buckets = 10

0 
1 ---> 1.9
2 ---> 2.1, 2.9
3 ---> 3.4, 3.9
4 ---> 4.1
5
6
7
8
9

1.9, 2.1, 2.9, 3.4, 3.9, 4.1

----------------------------------------------------

arr = [29, 34, 19, 39, 21, 41]

min = 19
max = 41
41/10 - 19/10 + 1 = 23
4 - 1 + 1 = 4

FloorMin = 1

0 ---> 1.9
1 ---> 2.9, 2.1
2 ---> 3.4
3 ---< 4.1


0
1
2
3
4
5
6
7
8
9
10 ----> 29
11
12
13
14
15 ----> 34
16
17
18
19
20
21
22

--------------------------------------------------------
s = unacademy
sorted = aacdemnuy

countSort

--------------------------------------------------------

arr = [29, 34, 19, -7, 39, 21, 41, -2];
min = -7
max = 41

arrSize = 41-(-7) + 1 = 49
29-(-7) = 36

-----------------------------------------------------------

reverse a linked list


 null <---- 1 <----- 2 <------ 3 <----- 4


next = current.next;    null
current.next = previous;  null <--- 1
previous = current; 4
current = next; null





head = previous;

------------------------------------------------

radix sort

arr = [9, 5, 904, 402, 44, 89];

009
005
904
402
044
089

402
904
044
005
009
089

402
904
005
009
044
089

005
009
044
089
402
904
